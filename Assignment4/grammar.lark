?start: prog

?prog: exp
     | exp ";;" prog -> seq

?exp: let_exp
    | if_then_else
    | cons

?let_exp: "let" NAME "=" exp "in" exp    -> let
        | "letrec" NAME "=" exp "in" exp -> rec
        | "fix" exp                      -> fix

?if_then_else: "if" exp "then" exp "else" exp -> if_then_else

?cons: sum ":" cons -> cons
     | sum

?sum: product
    | sum "+" product    -> plus
    | sum "-" product    -> minus

?product: unary
        | product "*" unary    -> multiply

?unary: app
      | "-" unary         -> negation

?app: atom
    | app atom           -> app

?atom: NUMBER            -> number
     | NAME              -> var
     | "\\" NAME "." exp -> lam
     | "(" exp ")"
     | "#"               -> nil

// Define the terminals (tokens)
WS: /\s+/
COMMENT: /\/\/.*/

NAME: /[a-z_][a-zA-Z0-9_]*/
NUMBER: /\d+(\.\d+)?/

%ignore WS
%ignore COMMENT